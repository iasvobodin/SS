/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ Telegram –±–æ—Ç
 * @param {Object} formData - –î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
 * @param {string} formData.name - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} formData.contact - –ö–æ–Ω—Ç–∞–∫—Ç (Telegram –∏–ª–∏ email)
 * @param {string} formData.message - –°–æ–æ–±—â–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @param {string} formData.package - –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–∞–∫–µ—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Promise<{success: boolean, message: string}>}
 */
export async function sendToTelegram(formData) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const BOT_TOKEN = import.meta.env.PUBLIC_TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';
    const YOUR_USER_ID = import.meta.env.PUBLIC_TELEGRAM_CHAT_ID || 'YOUR_CHAT_ID_HERE';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
    if (BOT_TOKEN === 'YOUR_BOT_TOKEN_HERE' || YOUR_USER_ID === 'YOUR_CHAT_ID_HERE') {
        console.warn('‚ö†Ô∏è Telegram bot credentials not configured! Check .env file.');
        // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
        if (import.meta.env.DEV) {
            console.log('üìã Form data that would be sent:', formData);
            return {
                success: true,
                message: '[DEV MODE] –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å)'
            };
        }
        return {
            success: false,
            message: 'Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é: @svobodinaphoto'
        };
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    let messageText = 'üé® <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é!</b>\n\n';
    messageText += `üë§ <b>–ò–º—è:</b> ${escapeHtml(formData.name)}\n`;
    messageText += `üì± <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${escapeHtml(formData.contact)}\n`;

    if (formData.package) {
        messageText += `üì¶ <b>–ü–∞–∫–µ—Ç:</b> ${escapeHtml(formData.package)}\n`;
    }

    if (formData.message && formData.message.trim()) {
        messageText += `\nüí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n${escapeHtml(formData.message)}\n`;
    }

    messageText += `\n‚è∞ <b>–î–∞—Ç–∞:</b> ${new Date().toLocaleString('ru-RU', {
        timeZone: 'Asia/Yekaterinburg',
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    })}`;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç
    const siteUrl = import.meta.env.PUBLIC_SITE_URL || 'https://promo.svobodinaphoto.ru';
    messageText += `\n\nüåê <a href="${siteUrl}">–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç</a>`;

    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –µ–≥–æ ID
        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: YOUR_USER_ID,
                text: messageText,
                parse_mode: 'HTML',
                disable_web_page_preview: true
            })
        });

        const data = await response.json();

        if (data.ok) {
            return {
                success: true,
                message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
            };
        } else {
            console.error('Telegram API error:', data);
            return {
                success: false,
                message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram.'
            };
        }
    } catch (error) {
        console.error('Network error:', error);
        return {
            success: false,
            message: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram.'
        };
    }
}

/**
 * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
function escapeHtml(text) {
    const map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#039;'
    };
    return text.replace(/[&<>"']/g, m => map[m]);
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ chat_id –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
 * –í—ã–∑–æ–≤–∏—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É
 */
export async function getChatId(botToken) {
    try {
        const response = await fetch(`https://api.telegram.org/bot${botToken}/getUpdates`);
        const data = await response.json();

        if (data.ok && data.result.length > 0) {
            const lastUpdate = data.result[data.result.length - 1];
            return lastUpdate.message.chat.id;
        }

        return null;
    } catch (error) {
        console.error('Error getting chat_id:', error);
        return null;
    }
}